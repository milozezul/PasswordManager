@page "/explorer"
@using PManagerFrontend.Components.Explorer
@using PManagerFrontend.Components.MainWindow
@using PManagerFrontend.Interfaces.Services
@using PManagerFrontend.Models.Components
@using SharedModels.DataService
@using SharedModels.Database
@inject IDataService _data

<div class="flex flex-row">
    <div class="basis-1/4 bg-neutral-700 h-[100vh] flex flex-col">
        <UserAvatar />
        <ToolPanel />

        @foreach (var category in ExplorerData ?? Enumerable.Empty<Models.Components.GroupFolder>())
        {
            <GroupFolder Folder="@category" RefreshState="RefreshState" />
            if (category.IsExpand)
            {
                foreach (var record in category.Records ?? Enumerable.Empty<Models.Components.RecordFolder>())
                {
                    <RecordFolder Folder="@record" OpenRecordHandler="OpenRecordHandler" />
                }
            }
        }

        @* 
        <PasswordFolder IsUnlocked="false" Status="DEACTIVATED" />
        <NewGroup /> *@
    </div>
    <div class="basis-3/4 bg-neutral-500 h-[100vh] px-10">
        <BreadCrumb />
        @if (CurrentRecord != null)
        {
            <RecordData Folder="@CurrentRecord" />
            <RecordUnlockPanel Folder="@CurrentRecord" />
        }
        @* <PasswordHeader />
        <PasswordData /> *@
    </div>
</div>

@code {
    List<Models.Components.GroupFolder> ExplorerData { get; set; }
    Models.Components.RecordFolder CurrentRecord { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ExplorerData = await _data.GetAllRecords();
    }

    void OpenRecordHandler(Models.Components.RecordFolder record)
    {
        CurrentRecord = record;
    }

    void RefreshState()
    {
        StateHasChanged();
    }
}
