@page "/"
@using PManagerFrontend.Components
@using PManagerFrontend.Interfaces.Services
@using SharedModels.Database
@inject IDataService _dataService;

<div class="flex flex-row justify-center items-center mt-5">
    <div class="w-[80%]">
        @* Tool panel *@
        <div class="flex flex-row justify-between bg-white py-3 px-3">           
            <div class="flex flex-row gap-x-3">
                <div>
                    <select class="border-1 border-gray-400 h-10 py-2 w-50 pl-2 text-gray-600" @bind="SearchedCategory">
                        <option value="0">Select Category</option>
                        @foreach (var item in Categories)
                        {
                            <option value="@item.Name" >@item.Name</option>
                        }
                    </select>
                </div>
                <div>
                    <button class="bg-sky-400 text-white px-5 py-2 h-10 hover:bg-sky-600 text-sm" @onclick="RefreshCategories">REFRESH</button>
                </div>
                <div>
                    <button class="bg-sky-400 text-white px-5 py-2 h-10 hover:bg-sky-600 text-sm" @onclick="SearchRecords">SEARCH</button>
                </div>
            </div>

            <div class="flex flex-row gap-x-3">
                <div>
                    <input type="text" class="border-1 border-gray-400 h-10 py-2 w-50 pl-2 text-gray-600" @bind-value="NewCategory" />
                </div>

                <div>
                    <button class="bg-sky-400 text-white px-5 py-2 h-10 hover:bg-sky-600 text-sm" @onclick="CreateNewCategory">ADD GROUP</button>                                     
                </div>
            </div>
            
        </div>

        @* Records list *@
        <div class="flex flex-col mt-5 gap-y-5">
            <NewRecordForm Category="@SearchedCategory" />

            @foreach (var record in Records)
            {
                <Record model="@record" />
            }

        </div>
    </div>
</div>

@code {
    List<Category> Categories = new List<Category>();
    List<SharedModels.Database.Record> Records = new List<SharedModels.Database.Record>();

    string NewCategory { get; set; } = "";
    string SearchedCategory { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        Categories = await _dataService.GetCategories();         
    }

    async Task CreateNewCategory()
    {
        if (!string.IsNullOrEmpty(NewCategory))
        {
            await _dataService.CreateNewCategory(NewCategory.ToLower());
        }        
    }

    async Task RefreshCategories()
    {
        Categories = await _dataService.GetCategories();
    }

    async Task SearchRecords()
    {
        Records = await _dataService.GetRecordsByCategory(SearchedCategory);         
    }
}
