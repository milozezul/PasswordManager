@page "/dashboard"
@using PManagerFrontend.Components
@using PManagerFrontend.Interfaces.Services
@using PManagerFrontend.Models.Components
@using SharedModels.Database
@inject IDataService _dataService;

<div class="flex flex-row justify-center items-center mt-5">
    <ErrorModal Error="@Error" />
    <div class="w-[80%]">
        @* Tool panel *@
        <div class="flex flex-row justify-between bg-gray-700 py-3 px-3">           
            <div class="flex flex-row gap-x-3">
                <div>
                    <select class="bg-gray-200 h-10 py-2 w-50 pl-2 text-gray-900" @bind="SearchedCategory">
                        <option value="0" selected>Select Category</option>
                        @if (Categories != null)
                        {
                            foreach (var item in Categories)
                            {
                                <option value="@item.Name" >@item.Name</option>
                            }
                        }
                    </select>
                </div>
                <div>
                    <button class="bg-sky-400 text-white px-5 py-2 h-10 hover:bg-sky-600 text-sm" @onclick="RefreshCategories">REFRESH</button>
                </div>
                <div>
                    @if (SearchedCategory == "0")
                    {
                        <button class="bg-gray-400 text-white px-5 py-2 h-10 hover:bg-gray-400 text-sm">SEARCH</button>
                    }
                    else
                    {
                        <button class="bg-sky-400 text-white px-5 py-2 h-10 hover:bg-sky-600 text-sm" @onclick="SearchRecords">SEARCH</button>
                    }                    
                </div>
            </div>

            <div class="flex flex-row gap-x-3">
                <div>
                    <input type="text" class="bg-gray-200 h-10 py-2 w-50 pl-2 text-gray-900" @bind-value:event="oninput" @bind-value="NewCategory" />
                </div>

                <div>
                    @if (string.IsNullOrEmpty(NewCategory))
                    {
                        <button class="bg-gray-400 text-white px-5 py-2 h-10 hover:bg-gray-400 text-sm">ADD GROUP</button>
                    }
                    else
                    {
                        <button class="bg-sky-400 text-white px-5 py-2 h-10 hover:bg-sky-600 text-sm" @onclick="CreateNewCategory">ADD GROUP</button>
                    }
                </div>
            </div>            
        </div>

        @* Records list *@
        <div class="flex flex-col mt-5 gap-y-5">
            <NewRecordForm Category="@SearchedCategory" />
            @if (Records != null) {
                foreach (var record in Records)
                {
                    <Record model="@record" />
                }
            }            

        </div>
    </div>
</div>

@code {
    ErrorState Error { get; set; } = new ErrorState();

    List<Category> Categories { get; set; } = null;
    List<SharedModels.Database.Record> Records { get; set; }
    string NewCategory { get; set; } = "";
    string SearchedCategory { get; set; } = "0";

    protected override async Task OnInitializedAsync()
    {
        Categories = await _dataService.GetCategories();         
    }

    async Task CreateNewCategory()
    {
        if (!string.IsNullOrEmpty(NewCategory))
        {
            await _dataService.CreateNewCategory(NewCategory);
        }
    }

    async Task RefreshCategories()
    {
        Categories = await _dataService.GetCategories();
    }

    async Task SearchRecords()
    {
        Records = await _dataService.GetRecordsByCategory(SearchedCategory);         
    }
}
