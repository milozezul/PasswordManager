@page "/"
@using PManagerFrontend.Components
@using PManagerFrontend.Components.Utility
@using PManagerFrontend.Interfaces.Services
@using PManagerFrontend.Models
@using PManagerFrontend.Models.Components
@using SharedModels.APIs.Auth.Input

@inject NavigationManager Navigation;
@inject IAuthService _auth;

<ModalWindow Modal="@Modal" />
<div class="flex flex-row justify-center mt-5">
    @if (IsLogin)
    {
        <div class="bg-gray-700 text-white flex flex-col">
            <div class="bg-gray-600 w-full p-2 text-lg">Login</div>
            <div class="w-full flex flex-col items-center p-5">
                <div>
                    <div class="text-sm">Username</div>
                    <input class="h-10 py-2 w-50 pl-2 text-gray-900 bg-gray-200 w-80" type="text" @bind-value:event="oninput" @bind-value="Username" />
                </div>
                <div class="mt-2">
                    <div class="text-sm">Password</div>
                    <input class="h-10 py-2 w-50 pl-2 text-gray-900 bg-gray-200 w-80" type="text" @bind-value:event="oninput" @bind-value="Password" />
                </div>
                <div class="mt-5">
                    @if (string.IsNullOrEmpty(Username) || string.IsNullOrEmpty(Password))
                    {
                        <button class="bg-gray-400 text-white px-5 py-2 h-10 hover:bg-gray-400 text-sm font-light">LOGIN</button>
                    }
                    else
                    {
                        <button class="bg-sky-400 text-white px-5 py-2 h-10 hover:bg-sky-600 text-sm font-light" @onclick="OnLogin">LOGIN</button>
                    }
                </div>
            </div>

            <button class="bg-sky-400 text-white px-5 py-2 h-10 hover:bg-sky-600 text-sm font-light" @onclick="OpenRegister">REGISTER</button>
        </div>
    }
    else
    {
        <div class="bg-gray-700 text-white flex flex-col">
            <div class="bg-gray-600 w-full p-2 text-lg">Register</div>
            <div class="w-full flex flex-col items-center p-5">
                <div>
                    <div class="text-sm">Username</div>
                    <input class="h-10 py-2 w-50 pl-2 text-gray-900 bg-gray-200 w-80" type="text" @bind-value:event="oninput" @bind-value="Username" />
                </div>
                <div class="mt-2">
                    <div class="text-sm">Password</div>
                    <input class="h-10 py-2 w-50 pl-2 text-gray-900 bg-gray-200 w-80" type="text" @bind-value:event="oninput" @bind-value="Password" />
                </div>
                <div class="mt-2">
                    <div class="text-sm">First Name</div>
                    <input class="h-10 py-2 w-50 pl-2 text-gray-900 bg-gray-200 w-80" type="text" @bind-value:event="oninput" @bind-value="FirstName" />
                </div>
                <div class="mt-2">
                    <div class="text-sm">Last Name</div>
                    <input class="h-10 py-2 w-50 pl-2 text-gray-900 bg-gray-200 w-80" type="text" @bind-value:event="oninput" @bind-value="LastName" />
                </div>
                <div class="mt-2">
                    <div class="text-sm">Email</div>
                    <input class="h-10 py-2 w-50 pl-2 text-gray-900 bg-gray-200 w-80" type="text" @bind-value:event="oninput" @bind-value="Email" />
                </div>
                <div class="mt-3">
                    @if (string.IsNullOrEmpty(Username) || string.IsNullOrEmpty(Password))
                    {
                        <button class="bg-gray-400 text-white px-5 py-2 h-10 hover:bg-gray-400 text-sm font-light">REGISTER</button>
                    }
                    else
                    {
                        <button class="bg-sky-400 text-white px-5 py-2 h-10 hover:bg-sky-600 text-sm font-light" @onclick="OnRegister">REGISTER</button>
                    }
                </div>
            </div>
            <button class="bg-sky-400 text-white px-5 py-2 h-10 hover:bg-sky-600 text-sm font-light" @onclick="OpenLogin">LOGIN</button>
        </div>
    }
</div>

@code {
    ModalWindowState Modal = new ModalWindowState();

    string Username { get; set; }
    string Password { get; set; }
    string FirstName { get; set; }
    string LastName { get; set; }
    string Email { get; set; }

    bool IsLogin { get; set; } = true;

    void OpenLogin()
    {
        IsLogin = true;
    }

    void OpenRegister()
    {
        IsLogin = false;
    }

    async Task OnLogin()
    {
        var response = await _auth.Login(new LoginInput()
        {
            Username = Username,
            Password = Password
        });
        if (response.IsSuccess)
        {            
            Navigation.NavigateTo("/explorer");
        }
        else
        {
            ModalWindowState.OpenModal(Modal, "Error", "Failed to login");
        }
    }

    async Task OnRegister()
    {
        var response = await _auth.Register(new RegisterInput()
        {
            Username = Username,
            Password = Password,
            FirstName = FirstName,
            LastName = LastName,
            Email = Email
        });
        if (response.Value)
        {
            ModalWindowState.OpenModal(Modal, "Success", "Succesfully registered");
        }
        else
        {
            ModalWindowState.OpenModal(Modal, "Error", "Failed to register");
        }
    }
}
